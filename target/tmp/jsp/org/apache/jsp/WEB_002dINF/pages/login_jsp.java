/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.8.v20171121
 * Generated at: 2017-12-30 16:59:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<title>atm</title>\r\n");
      out.write("<meta name=\"description\" content=\"这是一个 index 页面\">\r\n");
      out.write("<meta name=\"keywords\" content=\"index\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" href=\"/assets/i/favicon.png\">\r\n");
      out.write("<link rel=\"apple-touch-icon-precomposed\"\r\n");
      out.write("\thref=\"/assets/i/app-icon72x72@2x.png\">\r\n");
      out.write("<meta name=\"apple-mobile-web-app-title\" content=\"Amaze UI\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/assets/css/amazeui.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/assets/css/amazeui.datatables.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/assets/css/app.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body data-type=\"login\">\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"am-g tpl-g\">\r\n");
      out.write("\t\t<!-- 风格切换 -->\r\n");
      out.write("\t\t<div class=\"tpl-skiner\">\r\n");
      out.write("\t\t\t<div class=\"tpl-skiner-toggle am-icon-cog\"></div>\r\n");
      out.write("\t\t\t<div class=\"tpl-skiner-content\">\r\n");
      out.write("\t\t\t\t<div class=\"tpl-skiner-content-title\">选择主题</div>\r\n");
      out.write("\t\t\t\t<div class=\"tpl-skiner-content-bar\">\r\n");
      out.write("\t\t\t\t\t<span class=\"skiner-color skiner-white\" data-color=\"theme-white\"></span>\r\n");
      out.write("\t\t\t\t\t<span class=\"skiner-color skiner-black\" data-color=\"theme-black\"></span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"tpl-login\">\r\n");
      out.write("\t\t\t<div class=\"tpl-login-content\">\r\n");
      out.write("\t\t\t\t<div class=\"tpl-login-logo\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<form class=\"am-form tpl-form-line-form\">\r\n");
      out.write("\t\t\t\t\t<div class=\"am-form-group\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"tpl-form-input\" id=\"userName\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"请输入账号\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"am-form-group\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"tpl-form-input\" id=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"请输入密码\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"am-form-group\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"am-btn am-btn-primary  am-btn-block tpl-btn-bg-color-success  tpl-login-btn\"\r\n");
      out.write("\t\t\t\t\t\t\tonclick=\"login();\">登录</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"am-form-group\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"am-btn am-btn-primary  am-btn-block tpl-btn-bg-color-success  tpl-login-btn\"\r\n");
      out.write("\t\t\t\t\t\t\tonclick=\"toRegist();\">注册</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- 模拟 Alert\r\n");
      out.write("\t<button type=\"button\" class=\"am-btn am-btn-primary\"\r\n");
      out.write("\t\tdata-am-modal=\"{target: '#my-alert'}\">Alertxxxx</button>\r\n");
      out.write("\t-->\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"am-modal am-modal-alert\" tabindex=\"-1\" id=\"login-alert\">\r\n");
      out.write("\t\t<div class=\"am-modal-dialog\">\r\n");
      out.write("\t\t\t<div class=\"am-modal-hd\" id=\"login-1\">{{ message }}</div>\r\n");
      out.write("\t\t\t<div class=\"am-modal-bd\" id=\"login-2\">{{ message }}</div>\r\n");
      out.write("\t\t\t<div class=\"am-modal-footer\">\r\n");
      out.write("\t\t\t\t<span class=\"am-modal-btn\">确定</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar Loginflag = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar app1 = new Vue({\r\n");
      out.write("\t\t\tel : '#login-1',\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\tmessage : 'Hello Vue!'\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\tvar app2 = new Vue({\r\n");
      out.write("\t\t\tel : '#login-2',\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\tmessage : 'Hello Vue!'\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\tif( Loginflag != ''){\r\n");
      out.write("\t\t\t\t//alert(' ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" ');\r\n");
      out.write("\t\t\t\t//alert('sx');\r\n");
      out.write("\t\t\t\tapp1.message = '登陆成功';\r\n");
      out.write("\t\t\t\tapp2.message = '欢迎您，' + ' ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" ';\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//RB.alert();\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$('#login-alert').modal('open');\r\n");
      out.write("\t\t\t\t$('#login-alert').on('close.modal.amui', function() {\r\n");
      out.write("\t\t\t\t\twindow.location.href = '/user/toUserCenter.do';\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction ajaxFunction(data, status) {\r\n");
      out.write("\t\t\tvar ajaxDto = data;\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\tif (ajaxDto.flag) {\r\n");
      out.write("\t\t\t\t//location.replace(location.href);\r\n");
      out.write("\t\t\t\t//刷新页面以读取session，\r\n");
      out.write("\t\t\t\twindow.location.href='/user/toLogin.do';\r\n");
      out.write("\t\t\t\t//alert(' ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" ');\r\n");
      out.write("// \t\t\t\tapp1.message = '登陆成功';\r\n");
      out.write("// \t\t\t\tapp2.message = '欢迎您，' + ' ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" ';\r\n");
      out.write("\r\n");
      out.write("// \t\t\t\t$('#login-alert').modal('open');\r\n");
      out.write("// \t\t\t\t$('#login-alert').on('close.modal.amui', function() {\r\n");
      out.write("// \t\t\t\t\twindow.location.href = '/user/toUserCenter.do';\r\n");
      out.write("// \t\t\t\t});\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t//alert(ajaxDto.message);\r\n");
      out.write("\t\t\t\tRB.alert(false,'登录失败,'+ajaxDto.message);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("// \t\t\t\tapp1.message = '登陆失败';\r\n");
      out.write("// \t\t\t\tapp2.message = 'sx ~' + ajaxDto.message;\r\n");
      out.write("// \t\t\t\t$('#login-alert').modal('open');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction login() {\r\n");
      out.write("\t\t\tvar user = {\r\n");
      out.write("\t\t\t\tuserName : $('#userName').val(),\r\n");
      out.write("\t\t\t\tpassword : $('#password').val()\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t$.post(\"/user/login.do\", user, ajaxFunction);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction toRegist() {\r\n");
      out.write("\t\t\twindow.location.href = \"/user/toRegist.do\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
